[user]
	name = Filippos Vasilakis
  email = vasilakisfil@gmail.com
  signingKey = vasilakisfil@gmail.com
[core]
	editor = vim
  hooksPath = /home/vasilakisfil/.githooks/
	excludesfile = ~/.gitignore_global
[push]
	default = current
	followTags = true
[giggle]
	main-window-maximized = true
	main-window-geometry = 700x550+0+476
	history-view-vpane-position = 453
	main-window-view = HistoryView
	file-view-vpane-position = 205
[alias]
  s = status --short --branch
  co = checkout
  wip = commit -am "wip"
  wipa = '!git add . && git commit -am "wip"'
  please = push --force-with-lease
  grog = log --oneline --decorate --graph --all
  remend = commit -a --amend --date=now
  count = rev-list --count master
  ri=rebase -i origin/master
  branches = "!f() { git for-each-ref --sort=committerdate refs/$1 --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'; }; f"
  dl= diff --name-only #I need to find a way to list them as shown in git status
  shoot= push origin --delete
  branch-name=symbolic-ref --short HEAD
  #why git doesn't have some nice defaults? :/
  fuckoff="!f(){ git branch --set-upstream-to=origin/$(git branch-name); }; f"
  repush="!f(){ git fetch && git rebase origin/master && git push; }; f"
  cleanup="!f(){ git branch --merged | egrep -v '(^\\*|master|dev)' | xargs git branch -d;}; f"
  lg1 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(normal)%s%C(reset) %C(dim normal)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
  lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(normal)%s%C(reset) %C(dim normal)- %an%C(reset)' --all
  lg = !"git lg1"
[commit]
  #gpgsign = true
